---
- name: nova user
  user:
    name: nova
    comment: nova
    shell: /bin/sh
    system: yes
    home: "{{ nova.state_path }}"
    createhome: yes
    generate_ssh_key: yes
    ssh_key_bits: 4096

- name: nova packages
  package:
    name: "{{ item }}"
  with_items: "{{ nova.install_packages }}"
  register: result
  until: result|succeeded
  retries: 5

- name: create nova config dir
  file: dest=/etc/nova state=directory

- name: create shared lock path for nova and cinder
  file:
    dest: "{{ state_path_base }}/sharedlock"
    state: directory
    mode: 0770
    owner: root
    group: root

- name: set acls on shared path
  acl:
    name: "{{ state_path_base }}/sharedlock"
    entity: nova
    etype: user
    permissions: rwx
    state: present

- name: create nova cache dir
  file: dest=/var/cache/nova state=directory mode=0700 owner=nova group=nova

- include: selinux.yml
  when: ansible_distribution == 'RedHat'
  tags: selinux

- name: create nova log dir
  file: dest=/var/log/nova state=directory mode=2750 owner=nova group=adm

- name: Change nova log dir acl
  acl: name=/var/log/nova state=present default=yes etype={{ item.etype }} permissions={{ item.permission }}
  with_items:
    - etype: user
      permission: rw
    - etype: group
      permission: r
    - etype: other
      permission: r

- name: nova config
  action: template src={{ item }} dest=/etc/nova mode=0640
          owner=root group=nova
  with_fileglob: ../templates/etc/nova/*
  tags: nova-config
  notify:
    - restart nova services

- name: copy policy files to openstack-dashboard
  template:
    src: "etc/nova/policy.json"
    dest: "/etc/openstack-dashboard/nova_policy.json"
    owner: "root"
    group: "{{ openstack_meta.apache[ursula_os].group }}"
    mode: 0640
  when: inventory_hostname in groups['controller']

- name: set uwsgi path (source install)
  set_fact: nova_uwsgi_path={{ openstack_source.virtualenv_base }}/nova/bin/uwsgi
  when: openstack_install_method == 'source'

- name: set uwsgi path (package install ubuntu)
  set_fact:
    nova_uwsgi_path: "{{ openstack_package.virtualenv_base }}/nova/bin/uwsgi"
  when: openstack_install_method == 'package' and ursula_os == 'ubuntu'

- name: set uwsgi path (package install rhel)
  set_fact:
    nova_uwsgi_path: "/usr/sbin/uwsgi"
  when: openstack_install_method == 'distro'

- name: Create nova placement api uwsgi and config directories
  file: path={{ item }} state=directory
        owner=nova group=nova mode=0775
  with_items:
    - /etc/nova/uwsgi
    - /run/uwsgi/nova

- name: configure nova placement api wsgi
  template: src=etc/nova/uwsgi/placement.ini
            dest=/etc/nova/uwsgi/placement.ini mode=0775
            owner=nova group=nova


- name: install nova placement api uwsgi service (ubuntu)
  template: src=etc/init/nova-placement-api.conf
            dest=/etc/init/nova-placement-api.conf mode=0644
  when: ursula_os == 'ubuntu'

- block:
  - name: install nova placement api uwsgi service (rhel)
    systemd_service:
      name: "{{ item.name }}"
      description: "{{ item.desc }}"
      cmd: "{{ nova_uwsgi_path }}"
      args: "{{ item.args }}"
      user: "{{ item.user }}"
      type: "{{ item.type }}"
      notify_access: "{{ item.notify_access }}"
      restart: "{{ item.restart }}"
      kill_signal: "SIGINT"
    with_items:
      - "{{ openstack_meta.nova.services.nova_placement_api[ursula_os] }}"

  - name: Configure tmpfiles.d for creation of /run/uwsgi/nova on reboot
    template:
      src: usr/lib/tmpfiles.d/openstack-nova-placement-api.conf
      dest: /usr/lib/tmpfiles.d/openstack-nova-placement-api.conf
      mode: 0644
  when: ursula_os == 'rhel'

- name: nova sudoer
  template: |
    src=etc/sudoers.d/nova
    dest=/etc/sudoers.d/nova
    owner=root
    group=root
    mode=0440

- include: logging.yml
  tags:
    - logrotate
    - logging

- include: serverspec.yml
  tags:
    - serverspec
  when: serverspec.enabled|default('False')|bool
